{-# LANGUAGE DeriveAnyClass  #-}
{-# OPTIONS_GHC -Wno-orphans #-}
module Haskell.ExtsInstances where

import Control.DeepSeq (NFData)
import GHC.Generics (Generic)

import Language.Haskell.Exts


deriving instance NFData a => NFData (ParseResult a)
deriving instance Generic (ParseResult a)
deriving instance NFData SrcLoc
deriving instance NFData SrcSpanInfo
deriving instance NFData SrcSpan
deriving instance NFData a => NFData (Module a)
deriving instance NFData a => NFData (ModuleHead a)
deriving instance NFData a => NFData (WarningText a)
deriving instance NFData a => NFData (ExportSpecList a)
deriving instance NFData a => NFData (ExportSpec a)
deriving instance NFData a => NFData (EWildcard a)
deriving instance NFData a => NFData (ImportDecl a)
deriving instance NFData a => NFData (ImportSpecList a)
deriving instance NFData a => NFData (ImportSpec a)
deriving instance NFData a => NFData (Assoc a)
deriving instance NFData a => NFData (Namespace a)
deriving instance NFData a => NFData (Decl a)
deriving instance NFData a => NFData (DeclHead a)
deriving instance NFData a => NFData (InstRule a)
deriving instance NFData a => NFData (InstHead a)
deriving instance NFData a => NFData (Binds a)
deriving instance NFData a => NFData (IPBind a)
deriving instance NFData a => NFData (PatternSynDirection a)
deriving instance NFData a => NFData (InjectivityInfo a)
deriving instance NFData a => NFData (ResultSig a)
deriving instance NFData a => NFData (ClassDecl a)
deriving instance NFData a => NFData (InstDecl a)
deriving instance NFData a => NFData (Deriving a)
deriving instance NFData a => NFData (DerivStrategy a)
deriving instance NFData a => NFData (DataOrNew a)
deriving instance NFData a => NFData (ConDecl a)
deriving instance NFData a => NFData (FieldDecl a)
deriving instance NFData a => NFData (QualConDecl a)
deriving instance NFData a => NFData (GadtDecl a)
deriving instance NFData a => NFData (BangType a)
deriving instance NFData a => NFData (Unpackedness a)
deriving instance NFData a => NFData (Match a)
deriving instance NFData a => NFData (Rhs a)
deriving instance NFData a => NFData (GuardedRhs a)
deriving instance NFData a => NFData (Context a)
deriving instance NFData a => NFData (FunDep a)
deriving instance NFData a => NFData (Asst a)
deriving instance NFData a => NFData (Type a)
deriving instance NFData Boxed
deriving instance NFData a => NFData (TyVarBind a)
deriving instance NFData a => NFData (Promoted a)
deriving instance NFData a => NFData (TypeEqn a)
deriving instance NFData a => NFData (Exp a)
deriving instance NFData a => NFData (Stmt a)
deriving instance NFData a => NFData (QualStmt a)
deriving instance NFData a => NFData (FieldUpdate a)
deriving instance NFData a => NFData (Alt a)
deriving instance NFData a => NFData (XAttr a)
deriving instance NFData a => NFData (Pat a)
deriving instance NFData a => NFData (PatField a)
deriving instance NFData a => NFData (PXAttr a)
deriving instance NFData a => NFData (RPat a)
deriving instance NFData a => NFData (RPatOp a)
deriving instance NFData a => NFData (Literal a)
deriving instance NFData a => NFData (Sign a)
deriving instance NFData a => NFData (ModuleName a)
deriving instance NFData a => NFData (QName a)
deriving instance NFData a => NFData (Name a)
deriving instance NFData a => NFData (QOp a)
deriving instance NFData a => NFData (Op a)
deriving instance NFData a => NFData (SpecialCon a)
deriving instance NFData a => NFData (CName a)
deriving instance NFData a => NFData (IPName a)
deriving instance NFData a => NFData (XName a)
deriving instance NFData a => NFData (Role a)
deriving instance NFData a => NFData (MaybePromotedName a)
deriving instance NFData a => NFData (Bracket a)
deriving instance NFData a => NFData (Splice a)
deriving instance NFData a => NFData (Safety a)
deriving instance NFData a => NFData (CallConv a)
deriving instance NFData a => NFData (ModulePragma a)
deriving instance NFData Tool
deriving instance NFData a => NFData (Overlap a)
deriving instance NFData a => NFData (Rule a)
deriving instance NFData a => NFData (RuleVar a)
deriving instance NFData a => NFData (Activation a)
deriving instance NFData a => NFData (Annotation a)
deriving instance NFData a => NFData (BooleanFormula a)
